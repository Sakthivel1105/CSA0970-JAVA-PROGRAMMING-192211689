import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class RansomNote {
    public static boolean canConstruct(String ransomNote, String magazine) {
        // Edge case: if ransomNote is longer than magazine, return false
        if (ransomNote.length() > magazine.length()) {
            return false;
        }
        
        // Count frequencies of characters in magazine
        Map<Character, Integer> magazineMap = new HashMap<>();
        for (char c : magazine.toCharArray()) {
            magazineMap.put(c, magazineMap.getOrDefault(c, 0) + 1);
        }
        
        // Check each character in ransomNote against magazineMap
        for (char c : ransomNote.toCharArray()) {
            if (!magazineMap.containsKey(c) || magazineMap.get(c) <= 0) {
                return false;
            }
            magazineMap.put(c, magazineMap.get(c) - 1);
        }
        
        return true;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input for ransomNote
        System.out.print("Enter the ransomNote: ");
        String ransomNote = scanner.nextLine().trim();

        // Input for magazine
        System.out.print("Enter the magazine: ");
        String magazine = scanner.nextLine().trim();

        // Check if ransomNote can be constructed from magazine
        boolean result = canConstruct(ransomNote, magazine);

        // Output the result
        System.out.println("Can ransomNote be constructed from magazine? " + (result ? "Yes" : "No"));

        scanner.close();
    }
}
